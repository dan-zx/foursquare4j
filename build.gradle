apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

group = 'com.foursquare4j'
version = '0.1'
sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint']

repositories {
    mavenCentral()
}

ext {
    slf4jVersion = '1.7.12'
    okHttpVersion = '2.4.0'
}

dependencies {
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile 'com.google.code.gson:gson:2.3.1'
    compile "com.squareup.okhttp:okhttp:${okHttpVersion}"
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.0.0'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile "com.squareup.okhttp:mockwebserver:${okHttpVersion}"
    testCompile 'ch.qos.logback:logback-classic:1.1.3'
    testCompile "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    testRuntime 'org.codehaus.groovy:groovy:2.4.3'
}

task jarWithDependencies(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

artifacts {
    archives jarWithDependencies
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "file://${System.properties['user.home']}/Dropbox/Public/m2repository/")
        addFilter('core') { artifact, file ->
            artifact.name == project.name
        }
        addFilter('all') { artifact, file ->
            artifact.name == project.name + '-all'
        }
        pom('all').whenConfigured { pom ->
            pom.dependencies = pom.dependencies.minus(pom.dependencies.findAll { dep -> dep.scope == 'compile' })
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}